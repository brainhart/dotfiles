#!/bin/zsh
# ------------------------------------------------------------------------------
# -------------------------------------path-------------------------------------
# ------------------------------------------------------------------------------
export CODE="${HOME}/code"


# ------------------------------------------------------------------------------
# -----------------------------------plugins------------------------------------
# ------------------------------------------------------------------------------
export TERM=xterm-256color
export CLICOLOR=1
export LS_COLORS='di=0;35'

HISTSIZE=5000
HISTFILE="$XDG_CACHE_HOME"/zsh/.zsh_history
SAVEHIST=5000
setopt appendhistory
setopt sharehistory
setopt incappendhistory
set bell-style none

zstyle ':zim:zmodule' use 'degit'
ZVM_INIT_MODE=sourcing

ZIM_HOME="$XDG_CACHE_HOME"/zim
if [[ ! -e ${ZIM_HOME}/zimfw.zsh ]]; then
  curl -fsSL --create-dirs -o ${ZIM_HOME}/zimfw.zsh \
      https://github.com/zimfw/zimfw/releases/latest/download/zimfw.zsh
fi
# Install missing modules, and update ${ZIM_HOME}/init.zsh if missing or outdated.
if [[ ! ${ZIM_HOME}/init.zsh -nt ${ZDOTDIR:-${HOME}}/.zimrc ]]; then
  source ${ZIM_HOME}/zimfw.zsh init -q
fi
source ${ZIM_HOME}/init.zsh

eval "$(starship init zsh)"
eval "$(zoxide init zsh)"


#-------------------------------------------------------------------------------
#-------------------------------settings and path-------------------------------
#-------------------------------------------------------------------------------

# History
export RIPGREP_CONFIG_PATH="$XDG_CONFIG_HOME"/ripgrep/ripgreprc



alias j="just"
alias .j="just --justfile $XDG_CONFIG_HOME/just/justfile --working-directory ."
alias uvx="uv tool run"


# ------------------------------------------------------------------------------
# -------------------------------------git--------------------------------------
# ------------------------------------------------------------------------------

alias g='gt'

alias gs='git status -sb'

alias gd='git diff'
alias gdh='git diff HEAD'

alias gl='git log'

alias ga='git add'
alias gaa='git add -A'

function is_in_graphite_repo() {
  [ -f "$(git rev-parse --git-dir 2>/dev/null)/.graphite_repo_config" ]
}

function gca() {
  if is_in_graphite_repo; then 
    gt modify --edit
  else 
    git commit --amend
  fi
}

function gcan() {
  if is_in_graphite_repo; then 
    gt modify
  else 
    git commit --amend --no-edit
  fi
}

function gcm() {
  if is_in_graphite_repo; then 
    gt modify -c -m $@
  else 
    git commit -m $@
  fi
}

alias gps='git push -u'
alias gpsf='git push --force'

alias gcd='cd $(git rev-parse --show-toplevel)'

alias precommit-rerun='pre-commit run --from-ref $(gt parent) --to-ref HEAD'

function is_in_gt_repo() {
	git rev-parse HEAD >/dev/null 2>&1
}

function gb() {
	is_in_gt_repo || return
	git for-each-ref refs/heads --format='%(refname:short)' |
		fzf --height 50% --border --ansi --multi --tac --preview-window right:70% \
			--preview 'git log --oneline --graph --date=short --pretty="format:%C(auto)%cd %h%d %s" {} | head -200'
}

function gnb() {
	DATE=$(date '+%Y-%m-%d')
	BRANCH_NAME="brian/$DATE/$@"
	gt branch create "$BRANCH_NAME"
}

function co() {
	git checkout $(gb)
}

function gbd() {
	gt branch -D $(gb)
}

function gfpr() {
	is_in_gt_repo || return
	gt fetch origin pull/$1/head && gt checkout -q FETCH_HEAD
}

function delete_current_branch() {
	is_in_gt_repo || return
	refname=$(gt rev-parse --abbrev-ref HEAD)
	gt checkout master
	gt update-ref -d $refname
}

# ------------------------------------------------------------------------------
# -------------------------------------misc-------------------------------------
# ------------------------------------------------------------------------------

alias ez="chezmoi edit $XDG_CONFIG_HOME/zsh/.zshrc"
alias sz="source $XDG_CONFIG_HOME/zsh/.zshrc"

alias ..="cd .."
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias ......='cd ../../../../..'

# Dotfiles Edit
alias dedit='chezmoi edit'

eval "$(atuin init zsh)"

# ------------------------------------------------------------------------------
# ------------------------------------local-------------------------------------
# ------------------------------------------------------------------------------

local_conf="$HOME/local_bin/local_conf.sh"
test -f "$local_conf" && source "$local_conf"
